exit
answer
User.all
other_answer
exit
answer.question
question
answer
exit
page.body
 visit questions_path
page.body
fill_in 'answer[body]', with: 'body for the answer'
visit question_path(question)
sit question_path(question)
question
user
exit
answer
exit
expect(page).to have_content question[1].title && question[0].title
expect(page).to have_content question[0].title 
expect(page).to have_content question[1].title 
expect(page).to have_content question[1].title && question[2].title
exit
expect(page).to have_content question[1].title && question[2].title
expect(page).to have_content question[1].title
expect(page).to have_content question(1).title
exit
Йгуыешщтюфдд
expect(page).to have_content question
expect(page).to have_content question(1)
exit
fill_in 'Email', with: 'user.email'
exit
has_content? 'log in'
has_content? 'Signed in successfully'
exit
puts current_url
fill_in 'Title', with: 'Test question'
visit new_question_path
page.reload
page.reload!
page reload
puts current_url
click_link 'Ask question'
has_content? 'Ask question'
puts current_url
visit '/questions'
puts current_url
click_on 'Ask question'
puts current_url
exit
puts current_url
exit
sign_in(user)
puts current_url
has_content? 'Title'
